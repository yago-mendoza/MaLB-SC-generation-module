{
    "success": false,
    "errors": {
        "type": 4,
        "message": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> temp_contract.sol\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n  --> temp_contract.sol:12:38:\n   |\n12 |         require(_numTickets == 1 || (userStatus[msg.sender] == \"Golden\" && _numTickets <= 3), \"Invalid number of tickets\");\n   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n  --> temp_contract.sol:24:17:\n   |\n24 |         require(userStatus[msg.sender] == \"Golden\" && _numTickets <= 3, \"Invalid number of tickets to transfer\");\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n  --> temp_contract.sol:35:13:\n   |\n35 |         if (userStatus[msg.sender] == \"Golden\") {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator * not compatible with types rational_const 5 / 4 and uint256. Fractional literals not supported.\n  --> temp_contract.sol:36:40:\n   |\n36 |             refundAmount[msg.sender] = 1.25 * userTicketsPurchased[msg.sender];\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Type rational_const 5 / 4 is not implicitly convertible to expected type uint256. Try converting to type ufixed8x2 or use an explicit conversion.\n  --> temp_contract.sol:36:40:\n   |\n36 |             refundAmount[msg.sender] = 1.25 * userTicketsPurchased[msg.sender];\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Platinum\"\n  --> temp_contract.sol:37:20:\n   |\n37 |         } else if (userStatus[msg.sender] == \"Platinum\") {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator * not compatible with types rational_const 21 / 20 and uint256. Fractional literals not supported.\n  --> temp_contract.sol:38:40:\n   |\n38 |             refundAmount[msg.sender] = 1.05 * userTicketsPurchased[msg.sender];\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Type rational_const 21 / 20 is not implicitly convertible to expected type uint256. Try converting to type ufixed8x2 or use an explicit conversion.\n  --> temp_contract.sol:38:40:\n   |\n38 |             refundAmount[msg.sender] = 1.05 * userTicketsPurchased[msg.sender];\n   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    "output": null
}