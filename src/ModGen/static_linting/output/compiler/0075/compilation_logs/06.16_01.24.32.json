{
    "success": false,
    "errors": {
        "type": 4,
        "message": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> temp_contract.sol\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n  --> temp_contract.sol:16:13:\n   |\n16 |         if (userStatus[msg.sender] == \"Golden\") {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n  --> temp_contract.sol:56:13:\n   |\n56 |         if (userStatus[msg.sender] == \"Golden\") {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n   --> temp_contract.sol:114:13:\n    |\n114 |         if (userStatus[msg.sender] == \"Golden\") {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Golden\"\n   --> temp_contract.sol:155:17:\n    |\n155 |             if (userStatus[msg.sender] == \"Golden\") {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator * not compatible with types uint256 and rational_const 1 / 4\n   --> temp_contract.sol:156:24:\n    |\n156 |                 return totalTokensSold * 0.25;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Platinum\"\n   --> temp_contract.sol:157:24:\n    |\n157 |             } else if (userStatus[msg.sender] == \"Platinum\") {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator * not compatible with types uint256 and rational_const 1 / 20\n   --> temp_contract.sol:158:24:\n    |\n158 |                 return totalTokensSold * 0.05;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Gold\"\n   --> temp_contract.sol:176:13:\n    |\n176 |         if (userMembershipTier[msg.sender] == \"Gold\") {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nError: Operator == not compatible with types string storage ref and literal_string \"Silver\"\n   --> temp_contract.sol:178:20:\n    |\n178 |         } else if (userMembershipTier[msg.sender] == \"Silver\") {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    "abi": null,
    "bytecode": null
}